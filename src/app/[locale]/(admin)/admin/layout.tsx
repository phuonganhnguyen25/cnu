import type { Metadata } from "next";
import { Lato } from "next/font/google";
import "@/app/globals.css";
import { headers } from "next/headers";
import { getDictionary } from "@/messages/setting";
import { getPathnames } from "@/actions/getPathnames";

const inter = Lato({ subsets: ["latin"], weight: "400" });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const locales = ["en", "vi"];

export function generateStaticParams() {
  return locales.map((locale) => ({ locale }));
}

export default async function RootLayout({
  children,
  params: { locale },
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {
  const headersList = headers();
  const pathname = headersList["get"]("x-pathname");

  const lang = await getDictionary(locale);
  const pathnames = await getPathnames();

  return (
    <html lang={locale}>
      <body className={inter.className}>
        <div className="flex">
          {/* Sidebar */}
          <div className="bg-slate-50 w-80 h-screen">
            {/* Sidebar content */}
            <nav className="p-4 text-sm">
              <ul className="space-y-2">
                {[
                  {
                    key: 1,
                    label: lang["Dashboard"]["Text"],
                    pathname: pathnames.DASHBOARD,
                    submenu: [],
                  },
                  {
                    key: 2,
                    label: lang["Category"]["Text"],
                    pathname: pathnames.CATEGORY.LIST,
                    submenu: [
                      {
                        key: 21,
                        label: lang["Common_Text"]["Create"],
                        pathname: pathnames.CATEGORY.CREATE,
                      },
                    ],
                  },
                ].map((x) => (
                  <li key={x.key}>
                    <a
                      href={x.pathname}
                      className={`block p-2 rounded-md ${
                        pathname === x.pathname
                          ? "bg-gray-300 font-bold"
                          : "hover:bg-gray-300"
                      } `}
                    >
                      {x.label?.toUpperCase()}
                    </a>
                    {x.submenu && (
                      <ul className="pl-4">
                        {x.submenu.map((subitem) => (
                          <li key={subitem.key}>
                            <a
                              href={subitem.pathname}
                              className={`block p-2 rounded-md ${
                                pathname === subitem.pathname
                                  ? "bg-gray-300 font-bold"
                                  : "hover:bg-gray-300"
                              } `}
                            >
                              {subitem.label?.toUpperCase()}
                            </a>
                          </li>
                        ))}
                      </ul>
                    )}
                  </li>
                ))}
                {/* Add more menu items as needed */}
              </ul>
            </nav>
          </div>

          {/* Main content */}
          <div className="w-10/12 bg-gray-200 relative">
            {/* Header */}
            <header className="bg-gray-600 p-6">
              {/* Breadcrumb */}
              <nav className="text-gray-600" aria-label="Breadcrumb">
                {/* Breadcrumb items */}
              </nav>
            </header>

            {/* Page content */}
            <main
              className="p-4 overflow-auto scrollbar-hidden"
              style={{ minHeight: "80vh" }}
            >
              {/* Page-specific content goes here */}
              {children}
            </main>

            <footer className="py-4 text-center w-full">
              <div className="container mx-auto">
                <p className="text-sm text-gray-500">
                  Â© 2024 Admin Panel. All rights reserved.
                </p>
                <p className="text-sm text-gray-500">
                  Contact us: admin@example.com | Phone: +1234567890
                </p>
                <p className="text-sm text-gray-500">
                  Terms of Service | Privacy Policy
                </p>
              </div>
            </footer>
          </div>
        </div>
      </body>
    </html>
  );
}
